a {
  &:not(.btn) {
    @include animated-link($link-color);
  }
}

img {
  max-width: 100%;
  vertical-align: middle;
}

.preview-image {
  img {
    padding: 4px;
    border: 1px solid #ddd;
    background-color: #fff;
  }
}

@keyframes move {
  from {
    background-position: 2px 19px;
  }

  to {
    background-position: 500px 19px;
  }
}

.input-control {
  width: 100%;
  height: $input-height;
  display: block;
  padding: $input-padding-y $input-padding-x;
  color: $input-color;
  border: $input-border-width solid $input-border-color;
  background-color: $input-bg;
  background-clip: padding-box;
  font-family: $input-font-family;
  font-weight: $input-font-weight;
  line-height: $input-line-height;
  @include font-size($input-font-size);

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @include border-radius($input-border-radius, 0);

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus($ignore-warning: true);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }

  // Remove select outline from select box in FF
  &:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 $input-color;
  }

  // Placeholder
  &::placeholder {
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
    color: $input-placeholder-color;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
    background-color: $input-disabled-bg;
  }
}

.form-field {
  .input-control__control {
    width: 100%;
    height: $input-height;
    cursor: pointer;
    border: $input-border-width solid $input-border-color;
    background-color: $input-bg;

    // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
    @include border-radius($input-border-radius, 0);

    @include box-shadow($input-box-shadow);
    @include transition($input-transition);

    &:hover {
      border-color: $input-border-color;
    }

    &[class*=is-focused] {
      color: $input-focus-color;
      border-color: $input-focus-border-color;
      outline: 0;
      background-color: $input-focus-bg;

      @if $enable-shadows {
        @include box-shadow($input-box-shadow, $input-focus-box-shadow);
      }

      @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: $input-focus-box-shadow;
      }
    }

    .input-control__value-container {
      padding: $input-padding-y $input-padding-x;
      color: $input-color;
      line-height: 1;

      &:focus {
        outline: 0;
      }

      .input-control__single-value {
        position: static;
        top: auto;
        margin: 0;
        transform: none;
        color: $input-color;
        font-family: $input-font-family;
        font-weight: $input-font-weight;
        line-height: $input-line-height;
        @include font-size($input-font-size);

        &+div {
          margin: 0;
          padding-top: 0;
          padding-bottom: 0;
        }
      }
    }

    &+.input-control__menu {
      .input-control__option {
        font-size: em(14);
      }
    }
  }
}

.btn {
  @include get-btn();
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

@each $color,
$value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

.btn-light {
  border-color: #ddd;
  background-color: #fafafa;
}

.error {
  margin: $alert-margin-bottom 0 0 0;
  color: $red;
}

.actions-group {
  margin: rem(25) 0;

  .btn {
    overflow: hidden;
    display: inline-flex;
    align-items: stretch;
    justify-content: center;
    margin: 0 rem(4) rem(15);
    padding: 0;

    span {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      margin-right: 8px;
      list-style: none;
      font-size: rem(14);
    }

    .icon {
      padding: 0 $btn-padding-x;
      background: rgba($black, 0.1);
    }

    .text {
      padding: $btn-padding-y ($btn-padding-x * 0.25);
    }
  }
}

.cube-spinner {
  position: relative;
  width: 323px;
  height: 323px;
  margin: auto;

  .cube-loader {
    position: absolute;
    width: 59px;
    height: 59px;
    margin: auto;
    animation: cube-loader-move 3s infinite ease-in-out;
    background-color: $light-blue;

    &.cube-loader-1 {
      top: 0px;
      left: 82px;
      animation-delay: 0.15s;
    }

    &.cube-loader-2 {
      top: 0px;
      left: 165px;
      animation-delay: 0.3s;
    }

    &.cube-loader-3 {
      top: 0px;
      left: 247px;
      animation-delay: 0.45s;
    }

    &.cube-loader-4 {
      top: 82px;
      left: 0px;
      animation-delay: 0.15s;
    }

    &.cube-loader-5 {
      top: 82px;
      left: 82px;
      animation-delay: 0.3s;
    }

    &.cube-loader-6 {
      top: 82px;
      left: 165px;
      animation-delay: 0.45s;
    }

    &.cube-loader-7 {
      top: 82px;
      left: 247px;
      animation-delay: 0.6s;
    }

    &.cube-loader-8 {
      top: 165px;
      left: 0px;
      animation-delay: 0.3s;
    }

    &.cube-loader-9 {
      top: 165px;
      left: 82px;
      animation-delay: 0.45s;
    }

    &.cube-loader-10 {
      top: 165px;
      left: 165px;
      animation-delay: 0.6s;
    }

    &.cube-loader-11 {
      top: 165px;
      left: 247px;
      animation-delay: 0.75s;
    }

    &.cube-loader-12 {
      top: 247px;
      left: 0px;
      animation-delay: 0.45s;
    }

    &.cube-loader-13 {
      top: 247px;
      left: 82px;
      animation-delay: 0.6s;
    }

    &.cube-loader-14 {
      top: 247px;
      left: 165px;
      animation-delay: 0.75s;
    }

    &.cube-loader-15 {
      top: 247px;
      left: 247px;
      animation-delay: 0.9s;
    }

  }
}

@keyframes cube-loader-move {
  35% {
    transform: scale(0.005);
  }

  50% {
    transform: scale(1.7);
  }

  65% {
    transform: scale(0.005);
  }
}